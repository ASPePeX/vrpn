
################################################################################
# NULL Tracker. This is a "device" that reports the Identity transformation for
# each of its sensors at the specified rate. It can be used to verify connections
# are working and for other tests of VRPN. There are three arguments:
#	char	name_of_this_device[]
#	int	number_of_sensors
#	float	rate_at_which_to_report_updates

vrpn_Tracker_NULL	Tracker0	2	2.0

################################################################################
# Example Dial server. This is a "device" that reports constant rotations for
# each of its dials at the specified rate. It can be used to verify connections
# are working and for other tests of VRPN. There are four arguments:
#	char	name_of_this_device[]
#	int	number_of_dials
#	float	rate_at_which_the_dials_spin		(revolutions/second)
#	float	rate_at_which_to_report_updates	(udpates/second)

vrpn_Dial_Example	Dial0	2	2.0	10.0

################################################################################
# UNC Python button device. UNC has developed a custom button input device, which
# is a 5-button controller that attaches to a parallel port and uses the sense
# lines to return the state of the buttons. This runs the device. Note that on
# Windows NT, you need to have installed the GiveIO driver for this code to
# work. It also works on Linux (no extra drivers needed), but on no other
# architecture. Arguments:
#	char	name_of_this_device[]
#	int	parallel_port_to_use_starting_with_1

#vrpn_Button_Python	Button0	1

################################################################################
# UNC Joystick driver. UNC has developed a custom-build joybox, with 7 analog
# and 2 button inputs (two 3-axis joysticks and a slider, with a button on top
# of each joystick). This will drive one of these devices, which attaches to
# a serial port on this computer. I'm not sure what the baud rate should be;
# David Harrison might know.
# This driver can be used in conjunction with the JoyFly driver to produce a
# tracker that uses the joystick to fly around. Arguments:
#	char	name_of_this_device[]
#	char	name_of_serial_device[]
#	int	baud_rate_of_serial_device
#	float	minimum_update_rate_from_analogs_even_if_they_dont_move

#vrpn_Joystick	Joybox0	/dev/ttyd1	19200	10.0

################################################################################
# Fakespace Pinch Glove. Drives a Fakespace Pinch Glove device connected to a 
# serial port on this machine. This device has ten buttons-two hands and five
# fingers on each hand. Buttons 0-4 are fingers for the right hand-thumb first 
# and pinkie last- while buttons 5-9 are for the left hand-thumb first. The
# Button is ON when it is touching another finger. Therefore there cannot
# be just one Button ON. Arguments:
#	char	name_of_this_device[]
#	char	name_of_serial_device[]
#	int	baud_rate_of_serial_device
 
# vrpn_Button_PinchGlove	PinchGlove0		COM1		9600
