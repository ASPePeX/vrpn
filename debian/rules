#!/usr/bin/make -f

#debian/stamp-makefile-build: build/libvrpn-quat1
build/libvrpn1:: build/libvrpn-quat1
build/libvrpn-server1 build/libvrpn-client1:: build/libvrpn1

include /usr/share/cdbs/1/rules/debhelper.mk
#include /usr/share/cdbs/1/class/makefile.mk
include /usr/share/cdbs/1/rules/patchsys-quilt.mk

# Set up configure settings based on architecture
DEB_HOST_ARCH ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)
ifeq ($(DEB_HOST_ARCH),i386)
HW_OS := pc_linux
endif
ifeq ($(DEB_HOST_ARCH),lpia)
HW_OS := pc_linux
endif
ifeq ($(DEB_HOST_ARCH),amd64)
HW_OS := pc_linux64
endif
ifeq ($(DEB_HOST_ARCH),arm)
HW_OS := pc_linux_arm
endif
ifeq ($(DEB_HOST_ARCH),armel)
HW_OS := pc_linux_arm
endif



# Minor hack to build in the right (main) directory
DEB_MAKE_BUILD_TARGET := HW_OS=$(HW_OS)
DEB_MAKE_INSTALL_TARGET := install INSTALL_DIR=$(DEB_DESTDIR)/usr HW_OS=$(HW_OS)
DEB_MAKE_CLEAN_TARGET := clean clean_g++ HW_OS=$(HW_OS)

DEB_DESTDIR := $(CURDIR)/debian/tmp

DEB_INSTALL_DOCS_ALL := $(CURDIR)/vrpn/README $(CURDIR)/vrpn/README.Compiling $(CURDIR)/vrpn/README.Legal
DEB_INSTALL_CHANGELOGS_ALL := $(CURDIR)/vrpn/ChangeLog

#DEB_DH_SHLIBDEPS_ARGS := -- $(patsubst %,-x%,$(DEB_ALL_PACKAGES))


MAKEFILES_TO_PROCESS := $(CURDIR)/quat/makefile \
						$(CURDIR)/vrpn/Makefile \
						$(CURDIR)/vrpn/client_src/Makefile \
						$(CURDIR)/vrpn/server_src/Makefile
post-patches::
	# Process makefiles to configure HW_OS and INSTALL_DIR
	#for mkf in $(MAKEFILES_TO_PROCESS); do \
	#	cp $$mkf $$mkf.pre-sed; \
	#	sed -i s/INSTALL_DIR := \/usr\/local/INSTALL_DIR := $(DEB_DESTDIR)/usr- $$mkf; \
	#	sed -i s-INSTALL_DIR := /usr/local-INSTALL_DIR := $(DEB_DESTDIR)/usr- $$mkf; \
	#	sed -i s-@VRPN_HOST_PLATFORM@-$(MAKEFILE_PLATFORM_LINE)- $$mkf; \
	#done
	#sed -i s-INSTALL_DIR)/include-INSTALL_DIR)/include/vrpn- $$mkf; \
build/libvprn-quat1::
	cd $(CURDIR)/quat && $(DEB_MAKE_ENVVARS) $(MAKE) $(if $(DEB_MAKE_MAKEFILE), -f $(DEB_MAKE_MAKEFILE),) -C $(DEB_BUILDDIR) CFLAGS=$(if $(CFLAGS_$(cdbs_curpkg)),"$(CFLAGS_$(cdbs_curpkg))","$(CFLAGS)") CXXFLAGS=$(if $(CXXFLAGS_$(cdbs_curpkg)),"$(CXXFLAGS_$(cdbs_curpkg))","$(CXXFLAGS)") CPPFLAGS=$(if $(CPPFLAGS_$(cdbs_curpkg)),"$(CPPFLAGS_$(cdbs_curpkg))","$(CPPFLAGS)") LDFLAGS=$(if $(LDFLAGS_$(cdbs_curpkg)),"$(LDFLAGS_$(cdbs_curpkg))","$(LDFLAGS)")

build/libvprn1::
	cd $(CURDIR)/vrpn && $(DEB_MAKE_ENVVARS) $(MAKE) $(if $(DEB_MAKE_MAKEFILE), -f $(DEB_MAKE_MAKEFILE),) -C $(DEB_BUILDDIR) CFLAGS=$(if $(CFLAGS_$(cdbs_curpkg)),"$(CFLAGS_$(cdbs_curpkg))","$(CFLAGS)") CXXFLAGS=$(if $(CXXFLAGS_$(cdbs_curpkg)),"$(CXXFLAGS_$(cdbs_curpkg))","$(CXXFLAGS)") CPPFLAGS=$(if $(CPPFLAGS_$(cdbs_curpkg)),"$(CPPFLAGS_$(cdbs_curpkg))","$(CPPFLAGS)") LDFLAGS=$(if $(LDFLAGS_$(cdbs_curpkg)),"$(LDFLAGS_$(cdbs_curpkg))","$(LDFLAGS)")

build/libvprn-server1::
	cd $(CURDIR)/vrpn/server_src && $(DEB_MAKE_ENVVARS) $(MAKE) $(if $(DEB_MAKE_MAKEFILE), -f $(DEB_MAKE_MAKEFILE),) -C $(DEB_BUILDDIR) CFLAGS=$(if $(CFLAGS_$(cdbs_curpkg)),"$(CFLAGS_$(cdbs_curpkg))","$(CFLAGS)") CXXFLAGS=$(if $(CXXFLAGS_$(cdbs_curpkg)),"$(CXXFLAGS_$(cdbs_curpkg))","$(CXXFLAGS)") CPPFLAGS=$(if $(CPPFLAGS_$(cdbs_curpkg)),"$(CPPFLAGS_$(cdbs_curpkg))","$(CPPFLAGS)") LDFLAGS=$(if $(LDFLAGS_$(cdbs_curpkg)),"$(LDFLAGS_$(cdbs_curpkg))","$(LDFLAGS)")

build/libvprn-client1::
	cd $(CURDIR)/vrpn/client_src && $(DEB_MAKE_ENVVARS) $(MAKE) $(if $(DEB_MAKE_MAKEFILE), -f $(DEB_MAKE_MAKEFILE),) -C $(DEB_BUILDDIR) CFLAGS=$(if $(CFLAGS_$(cdbs_curpkg)),"$(CFLAGS_$(cdbs_curpkg))","$(CFLAGS)") CXXFLAGS=$(if $(CXXFLAGS_$(cdbs_curpkg)),"$(CXXFLAGS_$(cdbs_curpkg))","$(CXXFLAGS)") CPPFLAGS=$(if $(CPPFLAGS_$(cdbs_curpkg)),"$(CPPFLAGS_$(cdbs_curpkg))","$(CPPFLAGS)") LDFLAGS=$(if $(LDFLAGS_$(cdbs_curpkg)),"$(LDFLAGS_$(cdbs_curpkg))","$(LDFLAGS)")

build/libvrpn1-doc::
	# Reconfigure doxyfile
	cp $(CURDIR)/vrpn/doxygen/Doxyfile $(CURDIR)/vrpn/doxygen/Doxyfile.pre-sed

	# Set version from debian version
	sed -i s-PROJECT_NUMBER         =-PROJECT_NUMBER         = $(DEB_VERSION)- \
		$(CURDIR)/vrpn/doxygen/Doxyfile

	# Specify absolute path to source
	sed -i s-INPUT                = ..-INPUT                = $(CURDIR)/vrpn- \
		$(CURDIR)/vrpn/doxygen/Doxyfile

	# Build the documentation
	mkdir -p $(DEB_DESTDIR)/usr/share/doc/libvrpn1/api

	cd $(DEB_DESTDIR)/usr/share/doc/libvrpn1/api && \
		doxygen $(CURDIR)/vrpn/doxygen/Doxyfile

	# Restore the doxyfile
	mv -f $(CURDIR)/vrpn/doxygen/Doxyfile.pre-sed $(CURDIR)/vrpn/doxygen/Doxyfile

install/vrpn::
	find $(DEB_DESTDIR) -name "CVS" -depth -exec rm -rf {} \;

clean::
	# Clean up editing detritus
	-rm -f debian/*~ debian/._* .DS_Store

	# Restore files processed by debian/rules
	for mkf in $(MAKEFILES_TO_PROCESS); do \
		[ -f $$mkf.pre-sed ] && mv -f $$mkf.pre-sed $$mkf || echo . ; \
	done


# workaround for http://bugs.debian.org/526392
#QUILT_PATCH_DIR := debian/patches
#QUILT_STAMPFN := patch
#-include /usr/share/topgit/tg2quilt.mk
